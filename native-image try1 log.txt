
esko@instance-1 ~ $ docker run -it --rm -v "$(pwd):/project" oracle/graalvm-ce:1.0.0-rc10 bash
Unable to find image 'oracle/graalvm-ce:1.0.0-rc10' locally
1.0.0-rc10: Pulling from oracle/graalvm-ce
f25d82609194: Pull complete 
1b8a22044399: Pull complete 
0b7ebe51b6d5: Pull complete 
bc0456132ece: Pull complete 
cf1cc4687583: Pull complete 
Digest: sha256:8f03a3e17306f9a5fd5331281104e293cffad4a3a04846bf4f12a5ea6a308bec
Status: Downloaded newer image for oracle/graalvm-ce:1.0.0-rc10
bash-4.2# cd pro
bash: cd: pro: No such file or directory
bash-4.2# cd project/
bash-4.2# ls
territory-bro.jar
bash-4.2# ls -lh
total 35M
-rw-r--r-- 1 5001 5001 35M Dec 17 19:02 territory-bro.jar
bash-4.2# native-image --report-unsupported-elements-at-runtime --static --no-server --verbose -jar territory-bro.jar 
Executing [
/opt/graalvm-ce-1.0.0-rc10/bin/java \
-XX:+UnlockExperimentalVMOptions \
-XX:+EnableJVMCI \
-XX:-UseJVMCICompiler \
-Dtruffle.TrustAllTruffleRuntimeProviders=true \
-d64 \
-noverify \
-XX:-UseJVMCIClassLoader \
-Xss10m \
-Xms1g \
-Xmx14g \
-Duser.country=US \
-Duser.language=en \
-Dgraalvm.version=1.0.0-rc10 \
-Dorg.graalvm.version=1.0.0-rc10 \
-Dcom.oracle.graalvm.isaot=true \
-Djvmci.class.path.append=/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/graal.jar \
-Xbootclasspath/a:/opt/graalvm-ce-1.0.0-rc10/jre/lib/boot/graal-sdk.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/boot/graaljs-scriptengine.jar \
-cp \
/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/builder/objectfile.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/builder/svm.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/builder/pointsto.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/graal-management.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/jvmci-hotspot.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/graal.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/jvmci-api.jar \
com.oracle.svm.hosted.NativeImageGeneratorRunner \
-watchpid \
10 \
-H:Path=/project \
-H:+ReportUnsupportedElementsAtRuntime \
-H:Kind=STATIC_EXECUTABLE \
-H:Class=territory_bro.main \
-H:Name=territory-bro \
-H:CLibraryPath=/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/clibraries/linux-amd64 \
-imagecp \
/opt/graalvm-ce-1.0.0-rc10/jre/lib/boot/graal-sdk.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/boot/graaljs-scriptengine.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/builder/objectfile.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/builder/svm.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/builder/pointsto.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/graal-management.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/jvmci-hotspot.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/graal.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/jvmci/jvmci-api.jar:/opt/graalvm-ce-1.0.0-rc10/jre/lib/svm/library-support.jar:/project:/project/territory-bro.jar
]
[territory-bro:11]    classlist:   8,025.76 ms
[territory-bro:11]        (cap):   1,015.83 ms
[territory-bro:11]        setup:   2,259.25 ms
[territory-bro:11]     analysis: 976,485.37 ms
error: unsupported features in 16 methods
Detailed message:
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved field during parsing: com.fasterxml.jackson.dataformat.cbor.CBORFactory._rootByteSymbols. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing field is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.fasterxml.jackson.dataformat.cbor.CBORFactory._createParser(CBORFactory.java:370)
Call path from entry point to com.fasterxml.jackson.dataformat.cbor.CBORFactory._createParser(byte[], int, int, IOContext): 
	at com.fasterxml.jackson.dataformat.cbor.CBORFactory._createParser(CBORFactory.java:370)
	at com.fasterxml.jackson.dataformat.cbor.CBORFactory.createParser(CBORFactory.java:285)
	at com.fasterxml.jackson.dataformat.cbor.CBORFactory.createParser(CBORFactory.java:26)
	at com.fasterxml.jackson.core.JsonFactory.createJsonParser(JsonFactory.java:1075)
	at cheshire.core$parse_cbor.invokeStatic(core.clj:222)
	at cheshire.core$parse_cbor.invoke(core.clj:210)
	at instaparse.core.Parser.applyTo(core.clj:145)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved field during parsing: com.fasterxml.jackson.dataformat.smile.SmileFactory._rootByteSymbols. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing field is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.fasterxml.jackson.dataformat.smile.SmileFactory._createParser(SmileFactory.java:369)
Call path from entry point to com.fasterxml.jackson.dataformat.smile.SmileFactory._createParser(InputStream, IOContext): 
	at com.fasterxml.jackson.dataformat.smile.SmileFactory._createParser(SmileFactory.java:368)
	at com.fasterxml.jackson.dataformat.smile.SmileFactory.createParser(SmileFactory.java:314)
	at com.fasterxml.jackson.dataformat.smile.SmileFactory.createParser(SmileFactory.java:304)
	at com.fasterxml.jackson.dataformat.smile.SmileFactory.createParser(SmileFactory.java:27)
	at com.fasterxml.jackson.core.JsonFactory.createJsonParser(JsonFactory.java:1075)
	at cheshire.core$parse_cbor.invokeStatic(core.clj:222)
	at cheshire.core$parse_cbor.invoke(core.clj:210)
	at instaparse.core.Parser.applyTo(core.clj:145)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved field during parsing: com.fasterxml.jackson.dataformat.smile.SmileFactory._rootByteSymbols. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing field is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.fasterxml.jackson.dataformat.smile.SmileFactory._createParser(SmileFactory.java:396)
Call path from entry point to com.fasterxml.jackson.dataformat.smile.SmileFactory._createParser(byte[], int, int, IOContext): 
	at com.fasterxml.jackson.dataformat.smile.SmileFactory._createParser(SmileFactory.java:396)
	at com.fasterxml.jackson.dataformat.smile.SmileFactory.createParser(SmileFactory.java:317)
	at com.fasterxml.jackson.dataformat.smile.SmileFactory.createParser(SmileFactory.java:304)
	at com.fasterxml.jackson.dataformat.smile.SmileFactory.createParser(SmileFactory.java:27)
	at com.fasterxml.jackson.core.JsonFactory.createJsonParser(JsonFactory.java:1075)
	at cheshire.core$parse_cbor.invokeStatic(core.clj:222)
	at cheshire.core$parse_cbor.invoke(core.clj:210)
	at instaparse.core.Parser.applyTo(core.clj:145)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: com.fasterxml.jackson.dataformat.cbor.CBORGenerator.getOutputContext(). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.fasterxml.jackson.dataformat.cbor.CBORGenerator.close(CBORGenerator.java:861)
Call path from entry point to com.fasterxml.jackson.dataformat.cbor.CBORGenerator.close(): 
	at com.fasterxml.jackson.dataformat.cbor.CBORGenerator.close(CBORGenerator.java:858)
	at clojure.tools.nrepl.ack$send_ack.invokeStatic(ack.clj:47)
	at clojure.tools.nrepl.ack$send_ack.invoke(ack.clj:45)
	at clojure.core.proxy$clojure.lang.APersistentMap$ff19274a.applyTo(Unknown Source)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved method during parsing: com.fasterxml.jackson.dataformat.smile.SmileGenerator.getOutputContext(). To diagnose the issue you can use the --allow-incomplete-classpath option. The missing method is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.fasterxml.jackson.dataformat.smile.SmileGenerator.close(SmileGenerator.java:1537)
Call path from entry point to com.fasterxml.jackson.dataformat.smile.SmileGenerator.close(): 
	at com.fasterxml.jackson.dataformat.smile.SmileGenerator.close(SmileGenerator.java:1534)
	at clojure.tools.nrepl.ack$send_ack.invokeStatic(ack.clj:47)
	at clojure.tools.nrepl.ack$send_ack.invoke(ack.clj:45)
	at clojure.core.proxy$clojure.lang.APersistentMap$ff19274a.applyTo(Unknown Source)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: ch.qos.logback.classic.gaffer.GafferConfigurator. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing ch.qos.logback.classic.gaffer.GafferUtil.runGafferConfiguratorOn(GafferUtil.java:43)
Call path from entry point to ch.qos.logback.classic.gaffer.GafferUtil.runGafferConfiguratorOn(LoggerContext, Object, URL): 
	at ch.qos.logback.classic.gaffer.GafferUtil.runGafferConfiguratorOn(GafferUtil.java:41)
	at ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread.run(ReconfigureOnChangeFilter.java:200)
	at java.lang.Shutdown.runHooks(Shutdown.java:123)
	at java.lang.Shutdown.sequence(Shutdown.java:167)
	at java.lang.Shutdown.shutdown(Shutdown.java:234)
	at com.oracle.svm.core.jdk.RuntimeSupport.shutdown(RuntimeSupport.java:179)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:189)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: com.codahale.metrics.MetricRegistry. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.zaxxer.hikari.pool.HikariPool.setMetricRegistry(HikariPool.java:284)
Call path from entry point to com.zaxxer.hikari.pool.HikariPool.setMetricRegistry(Object): 
	at com.zaxxer.hikari.pool.HikariPool.setMetricRegistry(HikariPool.java:283)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:121)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at clojure.java.jdbc$get_connection.invokeStatic(jdbc.clj:327)
	at clojure.java.jdbc$get_connection.invoke(jdbc.clj:229)
	at clojure.core.proxy$clojure.lang.APersistentMap$ff19274a.applyTo(Unknown Source)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: com.codahale.metrics.health.HealthCheckRegistry. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.zaxxer.hikari.HikariConfig.setHealthCheckRegistry(HikariConfig.java:709)
Call path from entry point to com.zaxxer.hikari.HikariConfig.setHealthCheckRegistry(Object): 
	at com.zaxxer.hikari.HikariConfig.setHealthCheckRegistry(HikariConfig.java:704)
	at hikari_cp.core$datasource_config.invokeStatic(core.clj:234)
	at hikari_cp.core$datasource_config.invoke(core.clj:182)
	at instaparse.auto_flatten_seq.FlattenOnDemandVector.applyTo(auto_flatten_seq.clj:388)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: com.codahale.metrics.health.HealthCheckRegistry. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing com.zaxxer.hikari.pool.HikariPool.setHealthCheckRegistry(HikariPool.java:318)
Call path from entry point to com.zaxxer.hikari.pool.HikariPool.setHealthCheckRegistry(Object): 
	at com.zaxxer.hikari.pool.HikariPool.setHealthCheckRegistry(HikariPool.java:317)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:124)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112)
	at clojure.java.jdbc$get_connection.invokeStatic(jdbc.clj:327)
	at clojure.java.jdbc$get_connection.invoke(jdbc.clj:229)
	at clojure.core.proxy$clojure.lang.APersistentMap$ff19274a.applyTo(Unknown Source)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: com.sun.jna.Platform. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.postgresql.sspi.SSPIClient.isSSPISupported(SSPIClient.java:90)
Call path from entry point to org.postgresql.sspi.SSPIClient.isSSPISupported(): 
	at org.postgresql.sspi.SSPIClient.isSSPISupported(SSPIClient.java:90)
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:617)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:141)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:224)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)
	at org.postgresql.Driver.makeConnection(Driver.java:454)
	at org.postgresql.Driver.access$100(Driver.java:57)
	at org.postgresql.Driver$ConnectThread.run(Driver.java:364)
	at java.lang.Thread.run(Thread.java:748)
	at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:480)
	at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:198)
	at com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: com.sun.jna.platform.win32.Sspi$SecBufferDesc. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.postgresql.sspi.SSPIClient.continueSSPI(SSPIClient.java:195)
Call path from entry point to org.postgresql.sspi.SSPIClient.continueSSPI(int): 
	at org.postgresql.sspi.SSPIClient.continueSSPI(SSPIClient.java:186)
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:652)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:141)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:224)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)
	at org.postgresql.Driver.makeConnection(Driver.java:454)
	at org.postgresql.Driver.access$100(Driver.java:57)
	at org.postgresql.Driver$ConnectThread.run(Driver.java:364)
	at java.lang.Thread.run(Thread.java:748)
	at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:480)
	at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:198)
	at com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: org.codehaus.janino.ClassBodyEvaluator. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder.build(PropertyEvalScriptBuilder.java:47)
Call path from entry point to ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder.build(String): 
	at ch.qos.logback.core.joran.conditional.PropertyEvalScriptBuilder.build(PropertyEvalScriptBuilder.java:47)
	at ch.qos.logback.core.joran.conditional.IfAction.begin(IfAction.java:67)
	at ch.qos.logback.core.joran.spi.Interpreter.callBeginAction(Interpreter.java:275)
	at ch.qos.logback.core.joran.spi.Interpreter.startElement(Interpreter.java:147)
	at ch.qos.logback.core.joran.spi.Interpreter.startElement(Interpreter.java:129)
	at ch.qos.logback.core.joran.spi.EventPlayer.play(EventPlayer.java:50)
	at ch.qos.logback.core.joran.GenericConfigurator.doConfigure(GenericConfigurator.java:149)
	at ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread.fallbackConfiguration(ReconfigureOnChangeFilter.java:233)
	at ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread.performXMLConfiguration(ReconfigureOnChangeFilter.java:221)
	at ch.qos.logback.classic.turbo.ReconfigureOnChangeFilter$ReconfiguringThread.run(ReconfigureOnChangeFilter.java:194)
	at java.lang.Shutdown.runHooks(Shutdown.java:123)
	at java.lang.Shutdown.sequence(Shutdown.java:167)
	at java.lang.Shutdown.shutdown(Shutdown.java:234)
	at com.oracle.svm.core.jdk.RuntimeSupport.shutdown(RuntimeSupport.java:179)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:189)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: waffle.windows.auth.impl.WindowsCredentialsHandleImpl. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.postgresql.sspi.SSPIClient.startSSPI(SSPIClient.java:145)
Call path from entry point to org.postgresql.sspi.SSPIClient.startSSPI(): 
	at org.postgresql.sspi.SSPIClient.startSSPI(SSPIClient.java:131)
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:638)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:141)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:224)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)
	at org.postgresql.Driver.makeConnection(Driver.java:454)
	at org.postgresql.Driver.access$100(Driver.java:57)
	at org.postgresql.Driver$ConnectThread.run(Driver.java:364)
	at java.lang.Thread.run(Thread.java:748)
	at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:480)
	at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:198)
	at com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)
Error: com.oracle.graal.pointsto.constraints.UnresolvedElementException: Discovered unresolved type during parsing: waffle.windows.auth.impl.WindowsSecurityContextImpl. To diagnose the issue you can use the --allow-incomplete-classpath option. The missing type is then reported at run time when it is accessed the first time.
Trace: 
	at parsing org.postgresql.sspi.SSPIClient.dispose(SSPIClient.java:231)
Call path from entry point to org.postgresql.sspi.SSPIClient.dispose(): 
	at org.postgresql.sspi.SSPIClient.dispose(SSPIClient.java:230)
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:709)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:141)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:224)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:195)
	at org.postgresql.Driver.makeConnection(Driver.java:454)
	at org.postgresql.Driver.access$100(Driver.java:57)
	at org.postgresql.Driver$ConnectThread.run(Driver.java:364)
	at java.lang.Thread.run(Thread.java:748)
	at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:480)
	at com.oracle.svm.core.posix.thread.PosixJavaThreads.pthreadStartRoutine(PosixJavaThreads.java:198)
	at com.oracle.svm.core.code.IsolateEnterStub.PosixJavaThreads_pthreadStartRoutine_e1f4a8c0039f8337338252cd8734f63a79b5e3df(generated:0)
Error: unbalanced monitors: mismatch at monitorexit, 631|LoadField#lockee__5436__auto__ != 3|LoadField#lockee__5436__auto__
Call path from entry point to clojure.tools.nrepl.middleware.session$add_stdin$fn__13168$fn__13172.invoke(): 
	at clojure.tools.nrepl.middleware.session$add_stdin$fn__13168$fn__13172.invoke(session.clj:234)
	at instaparse.core$parser$fn__5090.invoke(core.clj:213)
	at clojure.core.proxy$clojure.lang.APersistentMap$ff19274a.applyTo(Unknown Source)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Original exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: mismatch at monitorexit, 631|LoadField#lockee__5436__auto__ != 3|LoadField#lockee__5436__auto__
	at clojure.tools.nrepl.middleware.session$add_stdin$fn__13168$fn__13172.invoke(session.clj:235)
Caused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: mismatch at monitorexit, 631|LoadField#lockee__5436__auto__ != 3|LoadField#lockee__5436__auto__
	at org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3611)
	at org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2620)
	at org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4956)
	at org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3150)
	at org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:2959)
	at org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:889)
	at org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:783)
	at org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:95)
	at org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)
	at org.graalvm.compiler.phases.Phase.apply(Phase.java:42)
	at org.graalvm.compiler.phases.Phase.apply(Phase.java:38)
	at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:204)
	at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:323)
	at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:310)
	at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:300)
	at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:107)
	at com.oracle.graal.pointsto.flow.SpecialInvokeTypeFlow.onObservedUpdate(InvokeTypeFlow.java:421)
	at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)
	at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)
	at com.oracle.graal.pointsto.flow.SourceTypeFlowBase.update(SourceTypeFlowBase.java:121)
	at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:508)
	at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)
	at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
Error: unbalanced monitors: mismatch at monitorexit, 98|LoadField#lockee__5436__auto__ != 3|LoadField#lockee__5436__auto__
Call path from entry point to clojure.tools.nrepl.middleware.session$session_out$fn__13119$fn__13120.invoke(): 
	at clojure.tools.nrepl.middleware.session$session_out$fn__13119$fn__13120.invoke(session.clj:46)
	at instaparse.core$parser$fn__5090.invoke(core.clj:213)
	at clojure.core.proxy$clojure.lang.APersistentMap$ff19274a.applyTo(Unknown Source)
	at territory_bro.main.main(Unknown Source)
	at com.oracle.svm.core.JavaMainWrapper.run(JavaMainWrapper.java:164)
	at com.oracle.svm.core.code.IsolateEnterStub.JavaMainWrapper_run_5087f5482cc9a6abc971913ece43acb471d2631b(generated:0)
Original exception that caused the problem: org.graalvm.compiler.code.SourceStackTraceBailoutException$1: unbalanced monitors: mismatch at monitorexit, 98|LoadField#lockee__5436__auto__ != 3|LoadField#lockee__5436__auto__
	at clojure.tools.nrepl.middleware.session$session_out$fn__13119$fn__13120.invoke(session.clj:47)
Caused by: org.graalvm.compiler.core.common.PermanentBailoutException: unbalanced monitors: mismatch at monitorexit, 98|LoadField#lockee__5436__auto__ != 3|LoadField#lockee__5436__auto__
	at org.graalvm.compiler.java.BytecodeParser.bailout(BytecodeParser.java:3611)
	at org.graalvm.compiler.java.BytecodeParser.genMonitorExit(BytecodeParser.java:2620)
	at org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:4956)
	at org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3150)
	at org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:2959)
	at org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:889)
	at org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:783)
	at org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:95)
	at org.graalvm.compiler.phases.Phase.run(Phase.java:49)
	at org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:197)
	at org.graalvm.compiler.phases.Phase.apply(Phase.java:42)
	at org.graalvm.compiler.phases.Phase.apply(Phase.java:38)
	at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:204)
	at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:323)
	at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:310)
	at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:300)
	at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:107)
	at com.oracle.graal.pointsto.flow.SpecialInvokeTypeFlow.onObservedUpdate(InvokeTypeFlow.java:421)
	at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:347)
	at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:389)
	at com.oracle.graal.pointsto.flow.SourceTypeFlowBase.update(SourceTypeFlowBase.java:121)
	at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:508)
	at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:174)
	at java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1402)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)

Error: Image building with exit status 1
bash-4.2# 




---------



* add --allow-incomplete-classpath option
* remove dependency to nrepl from prod code

